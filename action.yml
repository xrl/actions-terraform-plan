name: 'Terraform PR'
description: 'GitHub Action for adding `terraform plan` output as a PR comment'
branding:
  icon: 'package'
  color: 'blue'
runs:
  using: "composite"
  steps:
    - name: Terraform Plan
      id: plan
      shell: bash
      run: |
        terraform plan -no-color 2>&1 | tee ${GITHUB_WORKSPACE}/plan.out

    - name: Create/Update Comment
      uses: actions/github-script@v6
      env:
        TF_WORKSPACE: "${{ steps.workspace.outputs.stdout }}"
        CUSTOM_TITLE: "${{ inputs.pr-comment-title }}"
      with:
        script: |
          const fs = require('fs');
          const raw_plan = fs.readFileSync('plan.out', 'utf8');
          const commentTitle = `Terraform Plan`;
          const commentContent = `
          ${commentTitle}
          \`\`\`
          ${raw_plan}
          \`\`\`
          `;
          
          const comments = await github.rest.issues.listComments({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          const githubActionsBotComment = comments.data.find(comment =>
            comment.user.login === 'github-actions[bot]' &&
             comment.body.includes(commentTitle)
          );
          
          if (githubActionsBotComment) {
            await github.rest.issues.updateComment({
              comment_id: githubActionsBotComment.id,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentContent,
            })
          } else {
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentContent,
            })
          }